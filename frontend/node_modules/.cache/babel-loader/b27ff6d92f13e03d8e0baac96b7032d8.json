{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nconst GET_RECIPES = '/recipes';\n\nconst getRec = payload => ({\n  type: GET_RECIPES,\n  payload\n});\n\nexport const getRecipes = () => async dispatch => {\n  const response = await csrfFetch('/api/recipes');\n\n  if (response.ok) {\n    const recipes = await response.json();\n    dispatch(getRec(recipes));\n    return recipes;\n  }\n}; // const GET_COOKBOOK = '/cookbook'\n// const NEW_COOKBOOK = '/newcookbook'\n// const DELETE_REC = '/deleterecipe'\n// const EDIT_REC = '/editref'\n// const getCookbook = payload => ({\n//     type: GET_COOKBOOK,\n//     payload\n// })\n// export const clearRecipes = () => ({\n//     type: CLEAR_COOKBOOK\n// })\n// const newCookbook = payload => ({\n//     type: NEW_COOKBOOK,\n//     payload\n// })\n// const deleteRef = () => ({\n//     type: DELETE_REC,\n// })\n// const editRef = () => ({\n//     type: EDIT_REC,\n// })\n// export const newRecipe = (userId, name) => async dispatch => {\n//     const response = await csrfFetch(\"/api/recipes\", {\n//         method: \"POST\",\n//         body: JSON.stringify({ userId, name }),\n//     });\n//     if (response.ok) {\n//         const newRecipe = await response.json();\n//         dispatch(newCookbook(newRecipe));\n//         const response2 = await csrfFetch(`/api/recipes/user/${userId}`)\n//         if (response2.ok) {\n//             const recipes = await response2.json();\n//             dispatch(getCookbook(recipes));\n//             return recipes;\n//         }\n//     }\n// }\n// export const deleteRecipe = (recipeId) => async (dispatch) => {\n//     const response = await csrfFetch(`/api/recipes/${recipeId}`, {\n//         method: 'DELETE'\n//     })\n//     const data = await response.json();\n//     dispatch(deleteRef());\n//     const response2 = await csrfFetch(`/api/recipes/user/${data.userId}`)\n//     if (response2.ok) {\n//         const recipes = await response2.json();\n//         dispatch(getCookbook(recipes));\n//         return recipes;\n//     }\n// }\n// export const editRecipe = (recipeId, name) => async (dispatch) => {\n//     const response = await csrfFetch(`/api/recipes/`, {\n//         method: 'PATCH',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({recipeId, name}),\n//     })\n//     const data = await response.json();\n//     console.log(data)\n//     dispatch(editRecipe());\n//     const response2 = await csrfFetch(`/api/recipes/user/${data.userId}`)\n//     if (response2.ok) {\n//         const recipes = await response2.json();\n//         dispatch(getCookbook(recipes));\n//         return recipes;\n//     }\n// }\n\nconst recipes = {\n  recipes: n\n};\n\nfunction reducer(state = recipes, action) {\n  switch (action.type) {\n    case GET_RECIPES:\n      state.recipes = action.payload;\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/store/cookbook.js"],"names":["csrfFetch","GET_RECIPES","getRec","payload","type","getRecipes","dispatch","response","ok","recipes","json","n","reducer","state","action"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,MAAMC,WAAW,GAAG,UAApB;;AAEA,MAAMC,MAAM,GAAGC,OAAO,KAAK;AACvBC,EAAAA,IAAI,EAAEH,WADiB;AAEvBE,EAAAA;AAFuB,CAAL,CAAtB;;AAKA,OAAO,MAAME,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMP,SAAS,CAAC,cAAD,CAAhC;;AACA,MAAIO,QAAQ,CAACC,EAAb,EAAiB;AACb,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAJ,IAAAA,QAAQ,CAACJ,MAAM,CAACO,OAAD,CAAP,CAAR;AACA,WAAOA,OAAP;AACH;AACJ,CAPM,C,CAUP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMA,OAAO,GAAG;AAACA,EAAAA,OAAO,EAAEE;AAAV,CAAhB;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAAGJ,OAAzB,EAAkCK,MAAlC,EAA0C;AACtC,UAAQA,MAAM,CAACV,IAAf;AACI,SAAKH,WAAL;AACIY,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACX,OAAvB;AACA,aAAO,EACH,GAAGU;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAPR;AASH;;AAED,eAAeD,OAAf","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\n\nconst GET_RECIPES = '/recipes'\n\nconst getRec = payload => ({\n    type: GET_RECIPES,\n    payload\n})\n\nexport const getRecipes = () => async dispatch => {\n    const response = await csrfFetch('/api/recipes')\n    if (response.ok) {\n        const recipes = await response.json();\n        dispatch(getRec(recipes));\n        return recipes;\n    }\n}\n\n\n// const GET_COOKBOOK = '/cookbook'\n// const NEW_COOKBOOK = '/newcookbook'\n// const DELETE_REC = '/deleterecipe'\n// const EDIT_REC = '/editref'\n\n// const getCookbook = payload => ({\n//     type: GET_COOKBOOK,\n//     payload\n// })\n\n// export const clearRecipes = () => ({\n//     type: CLEAR_COOKBOOK\n// })\n\n// const newCookbook = payload => ({\n//     type: NEW_COOKBOOK,\n//     payload\n// })\n\n// const deleteRef = () => ({\n//     type: DELETE_REC,\n\n// })\n\n// const editRef = () => ({\n//     type: EDIT_REC,\n\n// })\n\n\n// export const newRecipe = (userId, name) => async dispatch => {\n//     const response = await csrfFetch(\"/api/recipes\", {\n//         method: \"POST\",\n//         body: JSON.stringify({ userId, name }),\n//     });\n//     if (response.ok) {\n//         const newRecipe = await response.json();\n//         dispatch(newCookbook(newRecipe));\n//         const response2 = await csrfFetch(`/api/recipes/user/${userId}`)\n//         if (response2.ok) {\n//             const recipes = await response2.json();\n//             dispatch(getCookbook(recipes));\n//             return recipes;\n//         }\n//     }\n// }\n\n// export const deleteRecipe = (recipeId) => async (dispatch) => {\n//     const response = await csrfFetch(`/api/recipes/${recipeId}`, {\n//         method: 'DELETE'\n//     })\n//     const data = await response.json();\n//     dispatch(deleteRef());\n//     const response2 = await csrfFetch(`/api/recipes/user/${data.userId}`)\n//     if (response2.ok) {\n//         const recipes = await response2.json();\n//         dispatch(getCookbook(recipes));\n//         return recipes;\n//     }\n// }\n\n// export const editRecipe = (recipeId, name) => async (dispatch) => {\n//     const response = await csrfFetch(`/api/recipes/`, {\n//         method: 'PATCH',\n//         headers: {\n//             'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({recipeId, name}),\n//     })\n//     const data = await response.json();\n//     console.log(data)\n//     dispatch(editRecipe());\n//     const response2 = await csrfFetch(`/api/recipes/user/${data.userId}`)\n//     if (response2.ok) {\n//         const recipes = await response2.json();\n//         dispatch(getCookbook(recipes));\n//         return recipes;\n//     }\n// }\n\n\n\n\nconst recipes = {recipes: n};\n\nfunction reducer(state = recipes, action) {\n    switch (action.type) {\n        case GET_RECIPES:\n            state.recipes = action.payload\n            return {\n                ...state,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}