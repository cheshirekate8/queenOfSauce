{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nimport * as kitchenActions from './kitchen';\nimport * as recipeActions from \"./cookbook\";\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = user => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER\n});\n\nexport const login = ({\n  credential,\n  password\n}) => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  dispatch(kitchenActions.getFridges(data.user.id));\n  dispatch(recipeActions);\n  return response;\n};\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\");\n  const data = await response.json();\n  dispatch(setUser(data.user));\n\n  if (data.user) {\n    dispatch(kitchenActions.getFridges(data.user.id));\n  }\n\n  return response;\n};\nexport const signup = user => async dispatch => {\n  const {\n    username,\n    email,\n    password\n  } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\nexport const logout = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\"\n  });\n  dispatch(removeUser());\n  dispatch(kitchenActions.clearFridges());\n  return response;\n};\nconst initialState = {\n  user: null\n};\n\nfunction reducer(state = initialState, action) {\n  let newState;\n\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state, {\n        user: action.payload\n      });\n      return newState;\n\n    case REMOVE_USER:\n      newState = Object.assign({}, state, {\n        user: null\n      });\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/store/session.js"],"names":["csrfFetch","kitchenActions","recipeActions","SET_USER","REMOVE_USER","setUser","user","type","payload","removeUser","login","credential","password","dispatch","response","method","body","JSON","stringify","data","json","getFridges","id","restoreUser","signup","username","email","logout","clearFridges","initialState","reducer","state","action","newState","Object","assign"],"mappings":"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","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\nimport * as kitchenActions from './kitchen';\nimport * as recipeActions from \"./cookbook\";\n\nconst SET_USER = 'session/setUser';\nconst REMOVE_USER = 'session/removeUser';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n});\n\nexport const login = ({ credential, password }) => async dispatch => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({ credential, password }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  dispatch(kitchenActions.getFridges(data.user.id));\n  dispatch(recipeActions)\n\n  return response;\n};\n\nexport const restoreUser = () => async dispatch => {\n  const response = await csrfFetch(\"/api/session\");\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  if (data.user) {\n    dispatch(kitchenActions.getFridges(data.user.id));\n  }\n  return response;\n};\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeUser());\n  dispatch(kitchenActions.clearFridges())\n  return response;\n};\n\nconst initialState = { user: null };\n\nfunction reducer(state = initialState, action) {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state, { user: action.payload });\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state, { user: null });\n      return newState;\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}