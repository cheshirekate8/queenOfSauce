{"ast":null,"code":"var _jsxFileName = \"/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/EditIngredientModal/EditIngredientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as pantryActions from \"../../store/pantry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EditIngredientForm({\n  currIngredient\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const userId = sessionUser.id;\n  const [name, setName] = useState(currIngredient.name);\n  const [imgUrl, setImgUrl] = useState(currIngredient.imgUrl);\n  const [desc, setDesc] = useState(currIngredient.desc);\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    dispatch(pantryActions.editIngredient(name, imgUrl, desc, userId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: imgUrl,\n          onChange: e => setImgUrl(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: desc,\n          onChange: e => setDesc(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Edit Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditIngredientForm, \"18rlgxO/UBtxxQvw3slDMeec+zI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditIngredientForm;\nexport default EditIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditIngredientForm\");","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/EditIngredientModal/EditIngredientForm.js"],"names":["React","useState","useDispatch","useSelector","pantryActions","EditIngredientForm","currIngredient","dispatch","sessionUser","state","session","user","userId","id","name","setName","imgUrl","setImgUrl","desc","setDesc","errors","setErrors","handleSubmit","e","preventDefault","editIngredient","map","error","idx","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;;;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAiD;AAAA;;AAC7C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,WAAW,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;AACA,QAAMC,MAAM,GAAGJ,WAAW,CAACK,EAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACK,cAAc,CAACQ,IAAhB,CAAhC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAACK,cAAc,CAACU,MAAhB,CAApC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACK,cAAc,CAACY,IAAhB,CAAhC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMqB,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAd,IAAAA,QAAQ,CAACH,aAAa,CAACqB,cAAd,CAA6BX,IAA7B,EAAkCE,MAAlC,EAAyCE,IAAzC,EAA8CN,MAA9C,CAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEU,YAAhB;AAAA,8BACI;AAAA,kBACKF,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACR;AAAA,oBAAeD;AAAf,WAASC,GAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,wCAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEd,IAFX;AAGI,UAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACM,MAAF,CAASC,KAAV,CAH5B;AAII,UAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAeI;AAAA,6CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEd,MAFX;AAGI,UAAA,QAAQ,EAAGO,CAAD,IAAON,SAAS,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAH9B;AAII,UAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAwBI;AAAA,+CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEZ,IAFX;AAGI,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAH5B;AAII,UAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAiCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAwCH;;GAvDQzB,kB;UACYH,W,EACGC,W;;;KAFfE,kB;AAyDT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as pantryActions from \"../../store/pantry\"\n\nfunction EditIngredientForm({ currIngredient  }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const userId = sessionUser.id\n    const [name, setName] = useState(currIngredient.name);\n    const [imgUrl, setImgUrl] = useState(currIngredient.imgUrl)\n    const [desc, setDesc] = useState(currIngredient.desc)\n    const [errors, setErrors] = useState([]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors([]);\n        dispatch(pantryActions.editIngredient(name,imgUrl,desc,userId))\n    };\n\n    return (\n        <>\n            <h1>Edit Ingredient</h1>\n            <form onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map((error, idx) => (\n                        <li key={idx}>{error}</li>\n                    ))}\n                </ul>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Image URL\n                    <input\n                        type=\"text\"\n                        value={imgUrl}\n                        onChange={(e) => setImgUrl(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Description\n                    <textarea\n                        type=\"text\"\n                        value={desc}\n                        onChange={(e) => setDesc(e.target.value)}\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Edit Ingredient</button>\n            </form>\n        </>\n    );\n}\n\nexport default EditIngredientForm;\n"]},"metadata":{},"sourceType":"module"}