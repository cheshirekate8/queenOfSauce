{"ast":null,"code":"var _jsxFileName = \"/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/NewIngredientModal/NewIngredientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as pantryActions from \"../../store/pantry\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./NewIngredient.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewIngredientForm({\n  setShowModal\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const userId = sessionUser.id;\n  const [name, setName] = useState(\"\");\n  const [imgUrl, setImgUrl] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    dispatch(pantryActions.newIngredient(name, imgUrl, desc, userId));\n    dispatch(pantryActions.getIngredients());\n    setShowModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Image URL\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: imgUrl,\n          onChange: e => setImgUrl(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: desc,\n          onChange: e => setDesc(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create New Ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewIngredientForm, \"EeXaA/kbdEnvK5SHvaFKN8GlJ34=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewIngredientForm;\nexport default NewIngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIngredientForm\");","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/NewIngredientModal/NewIngredientForm.js"],"names":["React","useState","pantryActions","useDispatch","useSelector","NewIngredientForm","setShowModal","dispatch","sessionUser","state","session","user","userId","id","name","setName","imgUrl","setImgUrl","desc","setDesc","errors","setErrors","handleSubmit","e","preventDefault","newIngredient","getIngredients","map","error","idx","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,qBAAP;;;;AAEA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA6C;AAAA;;AACzC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;AACA,QAAMC,MAAM,GAAGJ,WAAW,CAACK,EAA3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AAKA,QAAMqB,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAd,IAAAA,QAAQ,CAACL,aAAa,CAACuB,aAAd,CAA4BX,IAA5B,EAAiCE,MAAjC,EAAwCE,IAAxC,EAA6CN,MAA7C,CAAD,CAAR;AACAL,IAAAA,QAAQ,CAACL,aAAa,CAACwB,cAAd,EAAD,CAAR;AACApB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEgB,YAAhB;AAAA,8BACI;AAAA,kBACKF,MAAM,CAACO,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACR;AAAA,oBAAeD;AAAf,WAASC,GAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,wCAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEf,IAFX;AAGI,UAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACO,MAAF,CAASC,KAAV,CAH5B;AAII,UAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAeI;AAAA,6CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEf,MAFX;AAGI,UAAA,QAAQ,EAAGO,CAAD,IAAON,SAAS,CAACM,CAAC,CAACO,MAAF,CAASC,KAAV,CAH9B;AAII,UAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,eAwBI;AAAA,+CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAEb,IAFX;AAGI,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAH5B;AAII,UAAA,QAAQ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAiCI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAwCH;;GA5DQ1B,iB;UACYF,W,EACGC,W;;;KAFfC,iB;AA8DT,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as pantryActions from \"../../store/pantry\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./NewIngredient.css\";\n\nfunction NewIngredientForm({ setShowModal }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const userId = sessionUser.id\n    const [name, setName] = useState(\"\");\n    const [imgUrl, setImgUrl] = useState(\"\")\n    const [desc, setDesc] = useState(\"\")\n    const [errors, setErrors] = useState([]);\n\n    \n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setErrors([]);\n        dispatch(pantryActions.newIngredient(name,imgUrl,desc,userId))\n        dispatch(pantryActions.getIngredients())\n        setShowModal(false)\n    };\n\n    return (\n        <>\n            <h1>New Ingredient</h1>\n            <form onSubmit={handleSubmit}>\n                <ul>\n                    {errors.map((error, idx) => (\n                        <li key={idx}>{error}</li>\n                    ))}\n                </ul>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Image URL\n                    <input\n                        type=\"text\"\n                        value={imgUrl}\n                        onChange={(e) => setImgUrl(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Description\n                    <textarea\n                        type=\"text\"\n                        value={desc}\n                        onChange={(e) => setDesc(e.target.value)}\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Create New Ingredient</button>\n            </form>\n        </>\n    );\n}\n\nexport default NewIngredientForm;\n"]},"metadata":{},"sourceType":"module"}