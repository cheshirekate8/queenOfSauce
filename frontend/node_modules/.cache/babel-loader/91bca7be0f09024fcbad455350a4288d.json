{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session';\nimport kitchen from './kitchen';\nimport cookbook from './cookbook';\nimport pantry from './pantry';\nconst rootReducer = combineReducers({\n  session,\n  kitchen,\n  cookbook\n});\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","session","kitchen","cookbook","pantry","rootReducer","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCI,EAAAA,OADkC;AAElCC,EAAAA,OAFkC;AAGlCC,EAAAA;AAHkC,CAAD,CAAnC;AAMA,IAAIG,QAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,EAAAA,QAAQ,GAAGR,eAAe,CAACE,KAAD,CAA1B;AACD,CAFD,MAEO;AACL,QAAMU,MAAM,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,OAAvC;;AACA,QAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+ChB,OADjD;AAEAO,EAAAA,QAAQ,GAAGO,gBAAgB,CAACf,eAAe,CAACE,KAAD,EAAQU,MAAR,CAAhB,CAA3B;AACD;;AAED,MAAMM,cAAc,GAAIC,cAAD,IAAoB;AACzC,SAAOrB,WAAW,CAACS,WAAD,EAAcY,cAAd,EAA8BX,QAA9B,CAAlB;AACD,CAFD;;AAIA,eAAeU,cAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session';\nimport kitchen from './kitchen';\nimport cookbook from './cookbook';\nimport pantry from './pantry'\n\nconst rootReducer = combineReducers({\n  session,\n  kitchen,\n  cookbook\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}