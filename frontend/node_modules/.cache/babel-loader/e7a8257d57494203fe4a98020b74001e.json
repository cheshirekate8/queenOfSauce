{"ast":null,"code":"var _jsxFileName = \"/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/LoginFormPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginFormPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 27\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n\n  const handleDemo = e => {\n    e.preventDefault();\n    setErrors([]);\n    ser;\n    return dispatch(sessionActions.login({\n      credential,\n      password\n    })).catch(async res => {\n      const data = await res.json();\n      if (data && data.errors) setErrors(data.errors);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      id: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"loginLabels\",\n        children: [\"Username or Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: credential,\n          onChange: e => setCredential(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"loginLabels\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"logBtns\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      className: \"logLinks\",\n      children: \"Need an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleDemo,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"demoBtn\",\n        children: \"Login with Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginFormPage, \"ACPrgNGYwU2RwrDv9vyEgZj9BtA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginFormPage;\nexport default LoginFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginFormPage\");","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/LoginFormPage/index.js"],"names":["React","useState","sessionActions","useDispatch","useSelector","Redirect","Link","LoginFormPage","dispatch","sessionUser","state","session","user","credential","setCredential","password","setPassword","errors","setErrors","handleSubmit","e","preventDefault","login","catch","res","data","json","handleDemo","ser","map","error","idx","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport './LoginForm.css';\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password }))\n      .catch(async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n  };\n\n  const handleDemo = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    ser\n    return dispatch(sessionActions.login({ credential, password }))\n      .catch(async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n  };\n\n  return (\n    <div id='loginDiv'>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit} id='loginForm'>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label className='loginLabels'>\n          Username or Email\n          <input\n            type=\"text\"\n            value={credential}\n            onChange={(e) => setCredential(e.target.value)}\n            required\n          />\n        </label>\n        <label className='loginLabels'>\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\" className='logBtns'>Log In</button>\n      </form>\n      <Link to='/signup' className='logLinks'>Need an account?</Link>\n      <form onSubmit={handleDemo}>\n        <button type=\"submit\" id='demoBtn'>Login with Demo</button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginFormPage;\n"]},"metadata":{},"sourceType":"module"}