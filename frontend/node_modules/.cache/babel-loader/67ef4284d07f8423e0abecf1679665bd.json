{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nconst GET_KITCHEN = '/kitchen';\n\nconst getKitchen = payload => ({\n  type: GET_KITCHEN,\n  payload\n});\n\nexport const getFridges = userId => async dispatch => {\n  const response = await csrfFetch(`/api/fridges/user/${userId}`);\n\n  if (response.ok) {\n    const fridges = await response.json();\n    dispatch(getKitchen(fridges));\n    return fridges;\n  }\n};\nconst initialState = {\n  fridges: null\n};\n\nfunction reducer(state = initialState, action) {\n  let newState;\n\n  switch (action.type) {\n    case GET_KITCHEN:\n      newState = { ...state,\n        fridges: action.payload\n      };\n      return newState;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/store/kitchen.js"],"names":["csrfFetch","GET_KITCHEN","getKitchen","payload","type","getFridges","userId","dispatch","response","ok","fridges","json","initialState","reducer","state","action","newState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,MAAMC,WAAW,GAAG,UAApB;;AAEA,MAAMC,UAAU,GAAGC,OAAO,KAAK;AAC3BC,EAAAA,IAAI,EAAEH,WADqB;AAE3BE,EAAAA;AAF2B,CAAL,CAA1B;;AAKA,OAAO,MAAME,UAAU,GAAGC,MAAM,IAAI,MAAMC,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMR,SAAS,CAAE,qBAAoBM,MAAO,EAA7B,CAAhC;;AACA,MAAIE,QAAQ,CAACC,EAAb,EAAiB;AACb,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAJ,IAAAA,QAAQ,CAACL,UAAU,CAACQ,OAAD,CAAX,CAAR;AACA,WAAOA,OAAP;AACH;AACJ,CAPM;AASP,MAAME,YAAY,GAAG;AAAEF,EAAAA,OAAO,EAAE;AAAX,CAArB;;AAEA,SAASG,OAAT,CAAiBC,KAAK,GAAGF,YAAzB,EAAuCG,MAAvC,EAA+C;AAC3C,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACX,IAAf;AACI,SAAKH,WAAL;AACIe,MAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPJ,QAAAA,OAAO,EAAEK,MAAM,CAACZ;AAFT,OAAX;AAIA,aAAOa,QAAP;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH;;AAED,eAAeD,OAAf","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\n\nconst GET_KITCHEN = '/kitchen'\n\nconst getKitchen = payload => ({\n    type: GET_KITCHEN,\n    payload\n})\n\nexport const getFridges = userId => async dispatch => {\n    const response = await csrfFetch(`/api/fridges/user/${userId}`)\n    if (response.ok) {\n        const fridges = await response.json();\n        dispatch(getKitchen(fridges));\n        return fridges;\n    }\n}\n\nconst initialState = { fridges: null };\n\nfunction reducer(state = initialState, action) {\n    let newState;\n    switch (action.type) {\n        case GET_KITCHEN:\n            newState = {\n                ...state,\n                fridges: action.payload\n            }\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}