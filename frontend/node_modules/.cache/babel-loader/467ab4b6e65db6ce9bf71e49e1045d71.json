{"ast":null,"code":"var _jsxFileName = \"/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/NewFridgeModal/NewFridgeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport * as kitchenActions from \"../../store/kitchen\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport \"./NewFridge.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewFridgeForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [name, setName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [showModal, setShowModal] = useState(true);\n  const [rerender, setRerender] = useState(false);\n  let userId = sessionUser.id;\n  useEffect(() => {\n    dispatch(setRerender(!rerender));\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrors([]); // console.log(userId)\n    // console.log(name)\n\n    dispatch(kitchenActions.newFridge(userId, name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Fridge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: error\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create New Fridge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewFridgeForm, \"Q5VhuOeVxvzTENVz0mb0UIRvFmI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewFridgeForm;\nexport default NewFridgeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewFridgeForm\");","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/components/NewFridgeModal/NewFridgeForm.js"],"names":["React","useState","sessionActions","kitchenActions","useDispatch","useSelector","Redirect","NewFridgeForm","dispatch","sessionUser","state","session","user","name","setName","errors","setErrors","showModal","setShowModal","rerender","setRerender","userId","id","useEffect","handleSubmit","e","preventDefault","newFridge","map","error","idx","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,qBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAO,iBAAP;;;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,WAAW,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,IAA1B,CAA/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AAEA,MAAIoB,MAAM,GAAGZ,WAAW,CAACa,EAAzB;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZf,IAAAA,QAAQ,CAACY,WAAW,CAAC,CAACD,QAAF,CAAZ,CAAR;AACH,GAFU,EAER,EAFQ,CAAT;;AAIA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,SAAS,CAAC,EAAD,CAAT,CAF0B,CAG1B;AACA;;AACAR,IAAAA,QAAQ,CAACL,cAAc,CAACwB,SAAf,CAAyBN,MAAzB,EAAiCR,IAAjC,CAAD,CAAR;AACD,GAND;;AAQA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEW,YAAhB;AAAA,8BACE;AAAA,kBACGT,MAAM,CAACa,GAAP,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACV;AAAA,oBAAeD;AAAf,WAASC,GAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEjB,IAFT;AAGE,UAAA,QAAQ,EAAGY,CAAD,IAAOX,OAAO,CAACW,CAAC,CAACM,MAAF,CAASC,KAAV,CAH1B;AAIE,UAAA,QAAQ;AAJV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAsBD;;GA5CQzB,a;UACUH,W,EACGC,W;;;KAFbE,a;AA8CT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport * as kitchenActions from \"../../store/kitchen\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport \"./NewFridge.css\";\n\nfunction NewFridgeForm() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [name, setName] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const [showModal, setShowModal] = useState(true);\n  const [rerender, setRerender] = useState(false);\n\n  let userId = sessionUser.id\n\n  useEffect(()=>{\n    dispatch(setRerender(!rerender));\n}, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    // console.log(userId)\n    // console.log(name)\n    dispatch(kitchenActions.newFridge(userId, name))\n  };\n\n  return (\n    <>\n      <h1>New Fridge</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Create New Fridge</button>\n      </form>\n    </>\n  );\n}\n\nexport default NewFridgeForm;\n"]},"metadata":{},"sourceType":"module"}