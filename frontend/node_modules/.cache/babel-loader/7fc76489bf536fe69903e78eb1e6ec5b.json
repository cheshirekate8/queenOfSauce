{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nconst GET_RECIPES = '/recipes'; // const LOAD = 'api/inns/LOAD'\n\nconst getRec = list => ({\n  type: GET_RECIPES,\n  list\n}); // const load = (list) => ({\n//     type: LOAD,\n//     list,\n// });\n\n\nexport const getRecipes = () => async dispatch => {\n  const response = await csrfFetch('/api/recipes');\n\n  if (response.ok) {\n    const recipes = await response.json();\n    dispatch(getRec(recipes));\n  }\n}; // export const getInns = () => async dispatch => {\n//     const response = await csrfFetch('/api/inns');\n//     if (response.ok) {\n//         const list = await response.json();\n//         dispatch(load(list));\n//       }\n// }\n\nconst initialState = {\n  recipes: {}\n}; // const initialState = { list: [] };\n\nfunction reducer(state = initialState, action) {\n  let newState;\n\n  switch (action.type) {\n    case GET_RECIPES:\n      newState = { ...state,\n        recipes: action.list\n      };\n      return newState;\n\n    default:\n      return state;\n  }\n} // const innsReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case LOAD: {\n//             const allInns = {};\n//             action.list.forEach(inn => {\n//                 allInns[inn.id] = inn;\n//             });\n//             return {\n//                 // ...allInns,\n//                 ...state,\n//                 list: action.list,\n//             };\n//         }\n//         default:\n//             return state;\n//     }\n// }\n\n\nexport default reducer;","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/store/cookbook.js"],"names":["csrfFetch","GET_RECIPES","getRec","list","type","getRecipes","dispatch","response","ok","recipes","json","initialState","reducer","state","action","newState"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,MAAMC,WAAW,GAAG,UAApB,C,CACA;;AAEA,MAAMC,MAAM,GAAIC,IAAD,KAAW;AACtBC,EAAAA,IAAI,EAAEH,WADgB;AAEtBE,EAAAA;AAFsB,CAAX,CAAf,C,CAIA;AACA;AACA;AACA;;;AAGA,OAAO,MAAME,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMP,SAAS,CAAC,cAAD,CAAhC;;AACA,MAAIO,QAAQ,CAACC,EAAb,EAAiB;AACb,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAJ,IAAAA,QAAQ,CAACJ,MAAM,CAACO,OAAD,CAAP,CAAR;AACH;AACJ,CANM,C,CAOP;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAME,YAAY,GAAG;AAAEF,EAAAA,OAAO,EAAE;AAAX,CAArB,C,CACA;;AAEA,SAASG,OAAT,CAAiBC,KAAK,GAAGF,YAAzB,EAAuCG,MAAvC,EAA+C;AAC3C,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACV,IAAf;AACI,SAAKH,WAAL;AACIc,MAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPJ,QAAAA,OAAO,EAAEK,MAAM,CAACX;AAFT,OAAX;AAIA,aAAOY,QAAP;;AACJ;AACI,aAAOF,KAAP;AARR;AAUH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeD,OAAf","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\n\nconst GET_RECIPES = '/recipes'\n// const LOAD = 'api/inns/LOAD'\n\nconst getRec = (list) => ({\n    type: GET_RECIPES,\n    list\n})\n// const load = (list) => ({\n//     type: LOAD,\n//     list,\n// });\n\n\nexport const getRecipes = () => async dispatch => {\n    const response = await csrfFetch('/api/recipes')\n    if (response.ok) {\n        const recipes = await response.json();\n        dispatch(getRec(recipes));\n    }\n}\n// export const getInns = () => async dispatch => {\n//     const response = await csrfFetch('/api/inns');\n\n//     if (response.ok) {\n//         const list = await response.json();\n//         dispatch(load(list));\n//       }\n// }\n\nconst initialState = { recipes: {} };\n// const initialState = { list: [] };\n\nfunction reducer(state = initialState, action) {\n    let newState;\n    switch (action.type) {\n        case GET_RECIPES:\n            newState = {\n                ...state,\n                recipes: action.list\n            }\n            return newState;\n        default:\n            return state;\n    }\n}\n// const innsReducer = (state = initialState, action) => {\n//     switch (action.type) {\n//         case LOAD: {\n//             const allInns = {};\n//             action.list.forEach(inn => {\n//                 allInns[inn.id] = inn;\n//             });\n//             return {\n//                 // ...allInns,\n//                 ...state,\n//                 list: action.list,\n//             };\n//         }\n\n//         default:\n//             return state;\n//     }\n// }\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}