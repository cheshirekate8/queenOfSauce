{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nconst GET_RECIPES = '/recipes';\n\nconst getRec = list => ({\n  type: GET_RECIPES,\n  list\n});\n\nexport const getRecipes = () => async dispatch => {\n  const response = await csrfFetch('/api/recipes');\n\n  if (response.ok) {\n    const recipes = await response.json();\n    dispatch(getRec(recipes));\n    console.log(recipes);\n    return recipes;\n  }\n};\nconst initialState = {\n  allRecipes: null\n};\n\nfunction reducer(state = initialState, action) {\n  let newState;\n\n  switch (action.type) {\n    case GET_KITCHEN:\n      newState = { ...state,\n        fridges: action.payload\n      };\n      return newState;\n\n    case CLEAR_KITCHEN:\n      return { ...state,\n        fridges: null\n      };\n\n    case NEW_KITCHEN:\n      return state;\n\n    case DELETE_REF:\n      return state;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/cheshirekate8/appAcademyCode/projects/stardewRecipes/solution/frontend/src/store/cookbook.js"],"names":["csrfFetch","GET_RECIPES","getRec","list","type","getRecipes","dispatch","response","ok","recipes","json","console","log","initialState","allRecipes","reducer","state","action","newState","GET_KITCHEN","fridges","payload","CLEAR_KITCHEN","NEW_KITCHEN","DELETE_REF"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,MAAMC,WAAW,GAAG,UAApB;;AAEA,MAAMC,MAAM,GAAGC,IAAI,KAAK;AACpBC,EAAAA,IAAI,EAAEH,WADc;AAEpBE,EAAAA;AAFoB,CAAL,CAAnB;;AAKA,OAAO,MAAME,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMP,SAAS,CAAC,cAAD,CAAhC;;AACA,MAAIO,QAAQ,CAACC,EAAb,EAAiB;AACb,UAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAJ,IAAAA,QAAQ,CAACJ,MAAM,CAACO,OAAD,CAAP,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,WAAOA,OAAP;AACH;AACJ,CARM;AAUP,MAAMI,YAAY,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAArB;;AAGA,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAA+C;AAC3C,MAAIC,QAAJ;;AACA,UAAQD,MAAM,CAACb,IAAf;AACI,SAAKe,WAAL;AACID,MAAAA,QAAQ,GAAG,EACP,GAAGF,KADI;AAEPI,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAFT,OAAX;AAIA,aAAOH,QAAP;;AACJ,SAAKI,aAAL;AACI,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKG,WAAL;AACI,aAAOP,KAAP;;AACJ,SAAKQ,UAAL;AACI,aAAOR,KAAP;;AACJ;AACI,aAAOA,KAAP;AAjBR;AAmBH;;AACD,eAAeD,OAAf","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\n\nconst GET_RECIPES = '/recipes'\n\nconst getRec = list => ({\n    type: GET_RECIPES,\n    list\n})\n\nexport const getRecipes = () => async dispatch => {\n    const response = await csrfFetch('/api/recipes')\n    if (response.ok) {\n        const recipes = await response.json();\n        dispatch(getRec(recipes));\n        console.log(recipes)\n        return recipes;\n    }\n}\n\nconst initialState = { allRecipes: null };\n\n\nfunction reducer(state = initialState, action) {\n    let newState;\n    switch (action.type) {\n        case GET_KITCHEN:\n            newState = {\n                ...state,\n                fridges: action.payload\n            }\n            return newState;\n        case CLEAR_KITCHEN:\n            return {\n                ...state,\n                fridges: null\n            }\n        case NEW_KITCHEN:\n            return state;\n        case DELETE_REF:\n            return state\n        default:\n            return state;\n    }\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}